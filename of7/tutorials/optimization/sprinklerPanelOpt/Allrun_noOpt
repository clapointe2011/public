#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=wildFireFoam
nProcs=$(getNumberOfProcessors)

cp -rf 0_backup 0
mkdir runFiles

sed -i '19s/.*/    \/\/"libcustomFvPatchFields.so"/' system/controlDict
sed -i '20s/.*/    \/\/"libmyCompressibleTurbulenceModels.so"/' system/controlDict

# create the underlying block mesh
runApplication blockMesh

runApplication snappyHexMesh -overwrite

# create faceSet for burner inlet and faceZone for coupled wall
runApplication topoSet
mv log.topoSet log.topoSet.main

# extrude Film
runApplication extrudeToRegionMesh -dict system/extrudeToRegionMeshDictFilm -overwrite
mv log.extrudeToRegionMesh log.extrudeToRegionMeshFilm

# extrude pyrolysis
runApplication extrudeToRegionMesh -dict system/extrudeToRegionMeshDictPyr -overwrite
mv log.extrudeToRegionMesh log.extrudeToRegionMeshPyr


# change samplePatch in the boundary to coupled patch betwee region0 and
# pyrolysis
foamDictionary constant/filmRegion/polyMesh/boundary \
               -entry entry0.region0_to_filmRegion_coupledWall.samplePatch \
               -set region0_to_pyrolysisRegion_coupledWall

# create faceSets for inlet, outlet, sides for the Film
runApplication topoSet -region filmRegion
mv log.topoSet log.topoSet.film

# create actual patches
runApplication createPatch -region filmRegion -overwrite
mv log.createPatch log.createPatch.film

mv log* runFiles

sed -i '19s/.*/    "libcustomFvPatchFields.so"/' system/controlDict
sed -i '20s/.*/    "libmyCompressibleTurbulenceModels.so"/' system/controlDict

# Run
#unApplication wildFireFoam

if [ "$nProcs" -gt "1" ];
then
    echo "Running $application in parallel on $nProcs processors"
    ( mpirun -np $nProcs $application -parallel > log.$application 2>&1 )
else
    echo "Running $application in serial"
    ( $application > log.$application 2>&1 )
fi

#------------------------------------------------------------------------------
