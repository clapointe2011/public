/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      radiationProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

radiation       on;

radiationModel  fvDOM;

fvDOMCoeffs
{
    nPhi        3;      // azimuthal angles in PI/2 on X-Y.(from Y to X)
    nTheta      6;      // polar angles in PI (from Z to X-Y plane)
    tolerance   1e-4;   // convergence tolerance for radiation iteration
    maxIter     1;      // maximum number of iterations
}

// Number of flow iterations per radiation iteration
solverFreq 10;

absorptionEmissionModel greyMeanCombustion;

constantCoeffs
{
    absorptivity    absorptivity    [ m^-1 ]       0.01;
    emissivity      emissivity      [ m^-1 ]       0.01;
    E               E               [ kg m^-1 s^-3 ]  0;
}

constRadFractionEmissionCoeffs
{
    //Proportionality constant (EhrrCoeff*HRR) to be emitted. Source term in
    //RTE
    EhrrCoeff           0.2;  
    radScaling		false;
    Ehrr1               0.5;
    Ehrr2		0.2;
    patch1		(burner);
    patch2		(
                            region0_to_panelRegion_fRight_zone
                        );
}

greyMeanCombustionCoeffs
{
    lookUpTableFileName     none;

    CO2
    {
        Tcommon         200;   //Common Temp
        invTemp         true;   //Is the polynomio using inverse temperature.
        Tlow            200;   //Low Temp
        Thigh           2500;  //High Temp

        loTcoeffs
        (
            0
            0
            0
            0
            0
            0
        );
        hiTcoeffs
        (
            0.1
            0
            0
            0
            0
            0
        );
    }

    H2O
    {
        Tcommon         200;
        invTemp         true;
        Tlow            200;
        Thigh           2500;

        loTcoeffs
        (
            0
            0
            0
            0
            0
            0
        );
        hiTcoeffs
        (
            0.1
            0
            0
            0
            0
            0
        );
    }

    C3H8//CH4
    {
        Tcommon         200;
        Tlow            200;
        Thigh           2000;
        invTemp         false;

        loTcoeffs
        (
            0
            0
            0
            0
            0
            0
        );
        hiTcoeffs
        (
            0.1
            0
            0
            0
            0
            0
        );
    }

    O2
    {
        Tcommon         200;
        invTemp         true;
        Tlow            200;
        Thigh           2500;

        loTcoeffs
        (
            0
            0
            0
            0
            0
            0
        );
        hiTcoeffs
        (
            0.1
            0
            0
            0
            0
            0
        );
    }


    N2
    {
        Tcommon         200;
        invTemp         true;
        Tlow            200;
        Thigh           2500;

        loTcoeffs
        (
            0
            0
            0
            0
            0
            0
        );
        hiTcoeffs
        (
            0.1
            0
            0
            0
            0
            0
        );
    }

    EhrrCoeff               0.2;
}

scatterModel    none;

sootModel       none;

mixtureFractionSootCoeffs
{
    // reac = prod + nuSoot soot
    nuSoot              0.055;
    Wsoot               12;
}

// ************************************************************************* //
